* {
  box-sizing: border-box;
}

body {
  font-family: "Karla", sans-serif;
  margin: 0;
}

main {
  padding: 36px;
}

.header {
  display: flex;
  align-items: center;
  height: 65px;
  background: linear-gradient(90deg, #672280 1.18%, #A626D3 100%);
  color: white;
  padding: 20px;
}

.header--image {
  height: 100%;
  margin-right: 6px;
}

.header--title {
  font-size: 1.25rem;
  margin-right: auto;
}

.header--project {
  font-size: 0.75rem;
  font-weight: 500;
}

.form {
  display: grid;
  grid-template: 40px 40px / 1fr 1fr;
  gap: 17px;
  margin-bottom: 17px;
}

.form--input {
  font-family: "Karla", sans-serif;
  border-radius: 5px;
  border: 1px solid #D5D4D8;
  text-indent: 5px;
}

.form--button {
  grid-column: 1 / -1;
  font-family: "Karla", sans-serif;
  border-radius: 5px;
  background: linear-gradient(90.41deg, #711F8D 1.14%, #A818DA 100%);
  color: white;
  border: none;
  cursor: pointer;
}

.meme {
    position: relative; /* Set relative positioning to the container */
    text-align: center; /* Center the contents */
}

.meme--image {
  width: 100%; /* Take full width of the container */
  max-width: 800px; /* Maximum width, adjust as needed */
  height: auto; /* Maintain aspect ratio */
  object-fit: contain; /* Ensures the image is contained within the element's box */
  margin: 0 auto;
}

.meme--text {
    position: absolute; /* Position the text absolutely within the .meme container */
    left: 50%; /* Center the text horizontally */
    transform: translateX(-50%); /* Offset the text by half its width to truly center it */
    width: 100%; /* Ensure the text spans the width of the image */
    color: white; /* Example text color */
    font-size: 2em; /* Example font size */
    text-shadow:
      2px 2px 0 #000,
      -2px -2px 0 #000,
      2px -2px 0 #000,
      -2px 2px 0 #000,
      0 2px 0 #000,
      2px 0 0 #000,
      0 -2px 0 #000,
      -2px 0 0 #000,
      2px 2px 5px #000;
}


.meme--text.top {
    top: 10px; /* Position at the top of the container */
}

.meme--text.bottom {
    bottom: 10px; /* Position at the bottom of the container */
}


.bottom {
  bottom: 0;
}

.top {
  top: 0;
}